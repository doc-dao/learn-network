{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Learn Network Hello, this my notes about networking/kernel.","title":"Home"},{"location":"#learn-network","text":"Hello, this my notes about networking/kernel.","title":"Learn Network"},{"location":"about/","text":"About Personal docs about network related leanring. OVS Basic Network Linux Kernel eBPF","title":"About"},{"location":"about/#about","text":"Personal docs about network related leanring. OVS Basic Network Linux Kernel eBPF","title":"About"},{"location":"network/basic/all/","text":"All Flow: send/receive Monitoring and Tuning the Linux Networking Stack: Sending Data Monitoring and Tuning the Linux Networking Stack: Receiving Data \u56fe\u89e3Linux\u7f51\u7edc\u5305\u63a5\u6536\u8fc7\u7a0b","title":"ALL"},{"location":"network/basic/all/#all","text":"","title":"All"},{"location":"network/basic/all/#flow-sendreceive","text":"Monitoring and Tuning the Linux Networking Stack: Sending Data Monitoring and Tuning the Linux Networking Stack: Receiving Data \u56fe\u89e3Linux\u7f51\u7edc\u5305\u63a5\u6536\u8fc7\u7a0b","title":"Flow: send/receive"},{"location":"network/basic/datastructures/","text":"Data structure IP iphdr struct iphdr { #if defined(__LITTLE_ENDIAN_BITFIELD) __u8 ihl:4, version:4; #elif defined (__BIG_ENDIAN_BITFIELD) __u8 version:4, ihl:4; #else #error \"Please fix <asm/byteorder.h>\" #endif __u8 tos; __be16 tot_len; __be16 id; __be16 frag_off; __u8 ttl; __u8 protocol; __sum16 check; __be32 saddr; __be32 daddr; /*The options start here. */ }; iphdr->ihl : \u9996\u90e8\u957f\u5ea6(4\u4f4d):\u9996\u90e8\u957f\u5ea6\u6307\u7684\u662fIP\u5c42\u5934\u90e8\u536032 bit\u5b57\u7684\u6570\u76ee(\u4e5f\u5c31\u662fIP\u5c42\u5934\u90e8\u5305\u542b\u591a\u5c11\u4e2a4\u5b57\u8282 -- 32\u4f4d),\u5305\u62ec\u4efb\u4f55\u9009\u9879\u3002\u7531\u4e8e\u5b83\u662f\u4e00\u4e2a4\u6bd4\u7279\u5b57\u6bb5,\u56e0\u6b64\u9996\u90e8\u6700\u957f\u4e3a60\u4e2a\u5b57\u8282\u3002\u666e\u901aIP\u6570\u636e\u62a5(\u6ca1\u6709\u4efb\u4f55\u9009\u62e9\u9879)\u5b57\u6bb5\u7684\u503c\u662f5 <==> 5 * 32 / 8 = 5 * 4 = 20 Bytes Links: struct iphdr\u8be6\u89e3 TCP tcphdr struct tcphdr { __be16 source; __be16 dest; __be32 seq; __be32 ack_seq; #if defined(__LITTLE_ENDIAN_BITFIELD) __u16 res1:4, doff:4, fin:1, syn:1, rst:1, psh:1, ack:1, urg:1, ece:1, cwr:1; #elif defined(__BIG_ENDIAN_BITFIELD) __u16 doff:4, res1:4, cwr:1, ece:1, urg:1, ack:1, psh:1, rst:1, syn:1, fin:1; #else #error \"Adjust your <asm/byteorder.h> defines\" #endif __be16 window; __be16 check; __be16 urg_ptr; }; Links: tcphdr struct tcphdr\u89e3\u6790 UDP udphdr struct udphdr { __u16 source; __u16 dest; __u16 len; __u16 check; }; Links: struct udphdr","title":"DataStructures"},{"location":"network/basic/datastructures/#data-structure","text":"","title":"Data structure"},{"location":"network/basic/datastructures/#ip","text":"","title":"IP"},{"location":"network/basic/datastructures/#iphdr","text":"struct iphdr { #if defined(__LITTLE_ENDIAN_BITFIELD) __u8 ihl:4, version:4; #elif defined (__BIG_ENDIAN_BITFIELD) __u8 version:4, ihl:4; #else #error \"Please fix <asm/byteorder.h>\" #endif __u8 tos; __be16 tot_len; __be16 id; __be16 frag_off; __u8 ttl; __u8 protocol; __sum16 check; __be32 saddr; __be32 daddr; /*The options start here. */ }; iphdr->ihl : \u9996\u90e8\u957f\u5ea6(4\u4f4d):\u9996\u90e8\u957f\u5ea6\u6307\u7684\u662fIP\u5c42\u5934\u90e8\u536032 bit\u5b57\u7684\u6570\u76ee(\u4e5f\u5c31\u662fIP\u5c42\u5934\u90e8\u5305\u542b\u591a\u5c11\u4e2a4\u5b57\u8282 -- 32\u4f4d),\u5305\u62ec\u4efb\u4f55\u9009\u9879\u3002\u7531\u4e8e\u5b83\u662f\u4e00\u4e2a4\u6bd4\u7279\u5b57\u6bb5,\u56e0\u6b64\u9996\u90e8\u6700\u957f\u4e3a60\u4e2a\u5b57\u8282\u3002\u666e\u901aIP\u6570\u636e\u62a5(\u6ca1\u6709\u4efb\u4f55\u9009\u62e9\u9879)\u5b57\u6bb5\u7684\u503c\u662f5 <==> 5 * 32 / 8 = 5 * 4 = 20 Bytes Links: struct iphdr\u8be6\u89e3","title":"iphdr"},{"location":"network/basic/datastructures/#tcp","text":"","title":"TCP"},{"location":"network/basic/datastructures/#tcphdr","text":"struct tcphdr { __be16 source; __be16 dest; __be32 seq; __be32 ack_seq; #if defined(__LITTLE_ENDIAN_BITFIELD) __u16 res1:4, doff:4, fin:1, syn:1, rst:1, psh:1, ack:1, urg:1, ece:1, cwr:1; #elif defined(__BIG_ENDIAN_BITFIELD) __u16 doff:4, res1:4, cwr:1, ece:1, urg:1, ack:1, psh:1, rst:1, syn:1, fin:1; #else #error \"Adjust your <asm/byteorder.h> defines\" #endif __be16 window; __be16 check; __be16 urg_ptr; }; Links: tcphdr struct tcphdr\u89e3\u6790","title":"tcphdr"},{"location":"network/basic/datastructures/#udp","text":"","title":"UDP"},{"location":"network/basic/datastructures/#udphdr","text":"struct udphdr { __u16 source; __u16 dest; __u16 len; __u16 check; }; Links: struct udphdr","title":"udphdr"},{"location":"network/basic/ip/","text":"IP Flags DSCP Differentiated services","title":"IP"},{"location":"network/basic/ip/#ip","text":"","title":"IP"},{"location":"network/basic/ip/#flags","text":"","title":"Flags"},{"location":"network/basic/ip/#dscp","text":"Differentiated services","title":"DSCP"},{"location":"network/basic/tcp/","text":"TCP Basics Packet Content Flags TCP Flag Options - Section 4 : \u5173\u4e8e\u4e00\u4e9bSYN\u7b49flags\u7684\u8bb2\u89e3","title":"TCP"},{"location":"network/basic/tcp/#tcp-basics","text":"","title":"TCP Basics"},{"location":"network/basic/tcp/#packet-content","text":"","title":"Packet Content"},{"location":"network/basic/tcp/#flags","text":"TCP Flag Options - Section 4 : \u5173\u4e8e\u4e00\u4e9bSYN\u7b49flags\u7684\u8bb2\u89e3","title":"Flags"},{"location":"network/books/linux-network-internals/interfaces/","text":"\u91cd\u8981\u63a5\u53e3 netif_rx \u6b64\u51fd\u6570\u5c5e\u4e8e\u9a71\u52a8\u4e0e\u5185\u6838\u7684\u65e7\u63a5\u53e3(\u975eNAPI),\u4e3b\u8981\u4efb\u52a1: \u5bf9 sk_buff \u7684\u6570\u636e\u7ed3\u6784\u505a\u4e00\u4e9b\u521d\u59cb\u5316 \u628a\u5df2\u7ecf\u63a5\u53d7\u7684\u5e27\u5b58\u50a8\u5230 CPU \u7684\u79c1\u6709\u8f93\u5165\u961f\u5217\uff0c\u7136\u540e\u89e6\u53d1\u76f8\u5173\u8054\u7684\u8f6fIRQ NET_RX_SOFTIRQ \u4ee5\u901a\u77e5\u5185\u6838\u3002 \u66f4\u65b0\u76f8\u5173\u62e5\u585e\u767b\u673a\u7b49\u7edf\u8ba1\u6570\u636e net_rx_action \u4e0e NET_RX_SOFTIRQ \u76f8\u5173\u8054\u3002\u6d4f\u89c8\u5217\u8868\u4e2d\u5904\u4e8e\u8f6e\u8be2\u72b6\u6001\u7684\u8bbe\u5907\uff0c\u7136\u540e\u4e3a\u6bcf\u4e2a\u8bbe\u5907\u8c03\u7528\u76f8\u5173\u8054\u7684 poll \u51fd\u6570\uff0c\u4ee5\u5904\u7406\u5165\u53e3\u961f\u5217\u4e2d\u7684\u5e27\u3002\u6bcf\u6b21 poll \u65b9\u6cd5\u542f\u7528\u65f6\uff0c\u80fd\u5904\u7406\u7684\u5e27\u6570\u76ee\u90fd\u6709\u6700\u5927\u503c\u3002\u5982\u679c\u5728\u5176\u65f6\u95f4\u7247\u5185\u65e0\u6cd5\u6e05\u7a7a\u961f\u5217\uff0c\u5c31\u5f97\u7b49\u4e0b\u4e00\u6b21\u3002 \u6ce8: \u6b64\u51fd\u6570\u5c5e\u4e8e NAPI \u76f8\u5173. NAPI \u9a71\u52a8\u7a0b\u5e8f\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a poll \u65b9\u6cd5","title":"Functions"},{"location":"network/books/linux-network-internals/interfaces/#_1","text":"","title":"\u91cd\u8981\u63a5\u53e3"},{"location":"network/books/linux-network-internals/interfaces/#netif_rx","text":"\u6b64\u51fd\u6570\u5c5e\u4e8e\u9a71\u52a8\u4e0e\u5185\u6838\u7684\u65e7\u63a5\u53e3(\u975eNAPI),\u4e3b\u8981\u4efb\u52a1: \u5bf9 sk_buff \u7684\u6570\u636e\u7ed3\u6784\u505a\u4e00\u4e9b\u521d\u59cb\u5316 \u628a\u5df2\u7ecf\u63a5\u53d7\u7684\u5e27\u5b58\u50a8\u5230 CPU \u7684\u79c1\u6709\u8f93\u5165\u961f\u5217\uff0c\u7136\u540e\u89e6\u53d1\u76f8\u5173\u8054\u7684\u8f6fIRQ NET_RX_SOFTIRQ \u4ee5\u901a\u77e5\u5185\u6838\u3002 \u66f4\u65b0\u76f8\u5173\u62e5\u585e\u767b\u673a\u7b49\u7edf\u8ba1\u6570\u636e","title":"netif_rx"},{"location":"network/books/linux-network-internals/interfaces/#net_rx_action","text":"\u4e0e NET_RX_SOFTIRQ \u76f8\u5173\u8054\u3002\u6d4f\u89c8\u5217\u8868\u4e2d\u5904\u4e8e\u8f6e\u8be2\u72b6\u6001\u7684\u8bbe\u5907\uff0c\u7136\u540e\u4e3a\u6bcf\u4e2a\u8bbe\u5907\u8c03\u7528\u76f8\u5173\u8054\u7684 poll \u51fd\u6570\uff0c\u4ee5\u5904\u7406\u5165\u53e3\u961f\u5217\u4e2d\u7684\u5e27\u3002\u6bcf\u6b21 poll \u65b9\u6cd5\u542f\u7528\u65f6\uff0c\u80fd\u5904\u7406\u7684\u5e27\u6570\u76ee\u90fd\u6709\u6700\u5927\u503c\u3002\u5982\u679c\u5728\u5176\u65f6\u95f4\u7247\u5185\u65e0\u6cd5\u6e05\u7a7a\u961f\u5217\uff0c\u5c31\u5f97\u7b49\u4e0b\u4e00\u6b21\u3002 \u6ce8: \u6b64\u51fd\u6570\u5c5e\u4e8e NAPI \u76f8\u5173. NAPI \u9a71\u52a8\u7a0b\u5e8f\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a poll \u65b9\u6cd5","title":"net_rx_action"},{"location":"network/books/linux-network-internals/notes/","text":"\u76f8\u5173\u7b14\u8bb0 \u7528\u6237\u7a7a\u95f4\u4e0e\u5185\u6838\u7684\u63a5\u53e3 procfs : \u5f53\u4e00\u4e2a\u7528\u6237\u8bfb\u53d6\u6587\u4ef6\u65f6\uff0c\u4f1a\u5f15\u8d77\u5185\u6838\u95f4\u63a5\u8fd0\u884c\u4e00\u7ec4\u5185\u6838\u51fd\u6570\u3002 ifconfig \u4f7f\u7528 iotctl \u4e0e\u5185\u6838\u901a\u4fe1. ifconfig \u4f1a\u6253\u5f00\u4e00\u4e2a\u5957\u63a5\u5b57\uff0c\u7528\u4ece\u7cfb\u7edf\u7ba1\u7406\u5458\u90a3\u91cc\u6536\u5230\u7684\u4fe1\u606f(\u53c2\u6570),\u521d\u59cb\u5316\u4e00\u4e2a\u672c\u5730\u6570\u636e\u7ed3\u6784\uff0c\u7136\u540e\u4ee5 ioctl \u8c03\u7528\u4f20\u9012\u7ed9\u5185\u6838. \u7f51\u7edc\u8bbe\u5907\u521d\u59cb\u5316 \u8f6e\u8bad\u4e0e\u4e2d\u65ad : \u8f6e\u8bad\u7531\u5185\u6838\u9a71\u52a8\uff0c\u4e2d\u65ad\u7531\u8bbe\u5907\u7aef\u9a71\u52a8\u3002","title":"Notes"},{"location":"network/books/linux-network-internals/notes/#_1","text":"","title":"\u76f8\u5173\u7b14\u8bb0"},{"location":"network/books/linux-network-internals/notes/#_2","text":"procfs : \u5f53\u4e00\u4e2a\u7528\u6237\u8bfb\u53d6\u6587\u4ef6\u65f6\uff0c\u4f1a\u5f15\u8d77\u5185\u6838\u95f4\u63a5\u8fd0\u884c\u4e00\u7ec4\u5185\u6838\u51fd\u6570\u3002 ifconfig \u4f7f\u7528 iotctl \u4e0e\u5185\u6838\u901a\u4fe1. ifconfig \u4f1a\u6253\u5f00\u4e00\u4e2a\u5957\u63a5\u5b57\uff0c\u7528\u4ece\u7cfb\u7edf\u7ba1\u7406\u5458\u90a3\u91cc\u6536\u5230\u7684\u4fe1\u606f(\u53c2\u6570),\u521d\u59cb\u5316\u4e00\u4e2a\u672c\u5730\u6570\u636e\u7ed3\u6784\uff0c\u7136\u540e\u4ee5 ioctl \u8c03\u7528\u4f20\u9012\u7ed9\u5185\u6838.","title":"\u7528\u6237\u7a7a\u95f4\u4e0e\u5185\u6838\u7684\u63a5\u53e3"},{"location":"network/books/linux-network-internals/notes/#_3","text":"\u8f6e\u8bad\u4e0e\u4e2d\u65ad : \u8f6e\u8bad\u7531\u5185\u6838\u9a71\u52a8\uff0c\u4e2d\u65ad\u7531\u8bbe\u5907\u7aef\u9a71\u52a8\u3002","title":"\u7f51\u7edc\u8bbe\u5907\u521d\u59cb\u5316"},{"location":"network/overlay/geneve/","text":"GENEVE GENEVE\u4e0eVXLAN\u7c7b\u4f3c\uff0c\u4ecd\u7136\u662fEthernet over UDP\uff0c\u4e5f\u5c31\u662f\u7528UDP\u5c01\u88c5Ethernet\u3002VXLAN header\u662f\u56fa\u5b9a\u957f\u5ea6\u7684\uff088\u4e2a\u5b57\u8282\uff0c\u5176\u4e2d\u5305\u542b24bit VNI\uff09\uff0c\u4e0eVXLAN\u4e0d\u540c\u7684\u662f\uff0cGENEVE header\u4e2d\u589e\u52a0\u4e86TLV\uff08Type-Length-Value\uff09\uff0c\u75318\u4e2a\u5b57\u8282\u7684\u56fa\u5b9a\u957f\u5ea6\u548c0~252\u4e2a\u5b57\u8282\u53d8\u957f\u7684TLV\u7ec4\u6210\u3002GENEVE header\u4e2d\u7684TLV\u4ee3\u8868\u4e86\u53ef\u6269\u5c55\u7684\u5143\u6570\u636e\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e0bGENEVE header\uff1a Version\uff082bit\uff09\uff1a\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u76ee\u524d\u662f0 Opt Len\uff086bit\uff09\uff1a\u4ee54\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u8868\u660eVariable Length Options\u7684\u957f\u5ea6\u3002\u56e0\u4e3a\u53ea\u67096bit\uff0c\u6240\u4ee5Variable Length Options\u6700\u591a\u662f252\uff0863*4\uff09\u5b57\u8282\u3002 O\uff081bit\uff09\uff1a\u8868\u660e\u8fd9\u662f\u4e00\u4e2aOAM\u5305\uff0c\u5305\u542b\u4e86\u63a7\u5236\u4fe1\u606f\uff0c\u800c\u975e\u6570\u636e\u3002Endpoint\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2abit\u6765\u4f18\u5148\u5904\u7406\u8fd9\u4e2a\u5305\u3002 C\uff081bit\uff09\uff1a\u8868\u660e\u5728Variable Length Options\u91cc\u9762\uff0c\u5b58\u5728\u4e00\u4e2a\u6216\u8005\u591a\u4e2aCritical\u7684option\u3002\u5f53C\u88ab\u7f6e\u4f4d\u65f6\uff0cVariable Length Options\u5fc5\u987b\u88ab\u89e3\u6790\uff0c\u5982\u679c\u5f53\u524dEndpoint\u4e0d\u652f\u6301GENEVE\u89e3\u6790\uff0c\u90a3\u4e48\u5e94\u8be5\u4e22\u5f03\u6570\u636e\u5305\u3002\u5982\u679cC\u6ca1\u6709\u88ab\u7f6e\u4f4d\uff0c\u90a3\u4e48Endpoint\u53ef\u4ee5\u6839\u636eOpt Len\u76f4\u63a5\u4e22\u5f03\u6240\u6709\u7684Variable Length Options\u3002 Rsvd.\uff086bit\uff09\uff1a\u4fdd\u7559\u5b57\u6bb5\u3002 Protocol Type\uff0816bit\uff09\uff1a\u88ab\u5c01\u88c5\u7684\u534f\u8bae\u7c7b\u578b\uff0c\u4f8b\u5982Ethernet\u5c31\u662f0x6558\u3002\u8fd9\u4e2a\u5b57\u6bb5\u7684\u5b58\u5728\uff0c\u4f7f\u5f97GENEVE\u5c01\u88c5\u5176\u4ed6\u7684\u4e8c\u5c42\u534f\u8bae\u6210\u4e3a\u53ef\u80fd\u3002 VNI\uff0824bit\uff09\uff1a\u8001\u670b\u53cb\u4e86\u3002 Reserved\uff088bit\uff09\uff1a\u4fdd\u7559\u5b57\u6bb5\u3002Variable Length Options\uff1a\u7531TLV\u6784\u6210\uff0c\u5305\u542b\u4e86\u53ef\u6269\u5c55\u7684\u5143\u6570\u636e\u3002 Links \u7f51\u7edc\u865a\u62df\u5316\u534f\u8baeGENEVE","title":"GENEVE"},{"location":"network/overlay/geneve/#geneve","text":"GENEVE\u4e0eVXLAN\u7c7b\u4f3c\uff0c\u4ecd\u7136\u662fEthernet over UDP\uff0c\u4e5f\u5c31\u662f\u7528UDP\u5c01\u88c5Ethernet\u3002VXLAN header\u662f\u56fa\u5b9a\u957f\u5ea6\u7684\uff088\u4e2a\u5b57\u8282\uff0c\u5176\u4e2d\u5305\u542b24bit VNI\uff09\uff0c\u4e0eVXLAN\u4e0d\u540c\u7684\u662f\uff0cGENEVE header\u4e2d\u589e\u52a0\u4e86TLV\uff08Type-Length-Value\uff09\uff0c\u75318\u4e2a\u5b57\u8282\u7684\u56fa\u5b9a\u957f\u5ea6\u548c0~252\u4e2a\u5b57\u8282\u53d8\u957f\u7684TLV\u7ec4\u6210\u3002GENEVE header\u4e2d\u7684TLV\u4ee3\u8868\u4e86\u53ef\u6269\u5c55\u7684\u5143\u6570\u636e\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e0bGENEVE header\uff1a Version\uff082bit\uff09\uff1a\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u76ee\u524d\u662f0 Opt Len\uff086bit\uff09\uff1a\u4ee54\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u8868\u660eVariable Length Options\u7684\u957f\u5ea6\u3002\u56e0\u4e3a\u53ea\u67096bit\uff0c\u6240\u4ee5Variable Length Options\u6700\u591a\u662f252\uff0863*4\uff09\u5b57\u8282\u3002 O\uff081bit\uff09\uff1a\u8868\u660e\u8fd9\u662f\u4e00\u4e2aOAM\u5305\uff0c\u5305\u542b\u4e86\u63a7\u5236\u4fe1\u606f\uff0c\u800c\u975e\u6570\u636e\u3002Endpoint\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2abit\u6765\u4f18\u5148\u5904\u7406\u8fd9\u4e2a\u5305\u3002 C\uff081bit\uff09\uff1a\u8868\u660e\u5728Variable Length Options\u91cc\u9762\uff0c\u5b58\u5728\u4e00\u4e2a\u6216\u8005\u591a\u4e2aCritical\u7684option\u3002\u5f53C\u88ab\u7f6e\u4f4d\u65f6\uff0cVariable Length Options\u5fc5\u987b\u88ab\u89e3\u6790\uff0c\u5982\u679c\u5f53\u524dEndpoint\u4e0d\u652f\u6301GENEVE\u89e3\u6790\uff0c\u90a3\u4e48\u5e94\u8be5\u4e22\u5f03\u6570\u636e\u5305\u3002\u5982\u679cC\u6ca1\u6709\u88ab\u7f6e\u4f4d\uff0c\u90a3\u4e48Endpoint\u53ef\u4ee5\u6839\u636eOpt Len\u76f4\u63a5\u4e22\u5f03\u6240\u6709\u7684Variable Length Options\u3002 Rsvd.\uff086bit\uff09\uff1a\u4fdd\u7559\u5b57\u6bb5\u3002 Protocol Type\uff0816bit\uff09\uff1a\u88ab\u5c01\u88c5\u7684\u534f\u8bae\u7c7b\u578b\uff0c\u4f8b\u5982Ethernet\u5c31\u662f0x6558\u3002\u8fd9\u4e2a\u5b57\u6bb5\u7684\u5b58\u5728\uff0c\u4f7f\u5f97GENEVE\u5c01\u88c5\u5176\u4ed6\u7684\u4e8c\u5c42\u534f\u8bae\u6210\u4e3a\u53ef\u80fd\u3002 VNI\uff0824bit\uff09\uff1a\u8001\u670b\u53cb\u4e86\u3002 Reserved\uff088bit\uff09\uff1a\u4fdd\u7559\u5b57\u6bb5\u3002Variable Length Options\uff1a\u7531TLV\u6784\u6210\uff0c\u5305\u542b\u4e86\u53ef\u6269\u5c55\u7684\u5143\u6570\u636e\u3002","title":"GENEVE"},{"location":"network/overlay/geneve/#links","text":"\u7f51\u7edc\u865a\u62df\u5316\u534f\u8baeGENEVE","title":"Links"},{"location":"network/overlay/vxlan/","text":"VXLAN VXLAN\u662f\u4e00\u79cd\u627f\u8f7d\u534f\u8bae\uff0c\u5b9a\u4e49\u4e86MAC-over-UDP\u7684\u5c01\u88c5\u65b9\u6848\uff0c\u7531\u5185\uff08inner\uff09\u5230\u5916\uff08outer\uff09\u5206\u522b\u589e\u52a0\u4e868\u5b57\u8282VXLAN\u5934\u90e8\uff0c8\u5b57\u8282UDP\u5934\u90e8\uff0c20\u5b57\u8282IP\u5934\u90e8\u548c14\u5b57\u8282\u4ee5\u592a\u7f51\u5934\u90e8\uff0c\u5408\u8ba1\u589e\u52a0\u4e8650\u5b57\u8282\u5c01\u88c5\u3002 Intro \u542f\u8fea\u4e91\u8c08 | VXLAN\u7bc7 : \u57fa\u672c\u4ecb\u7ecd\u52a0header\u683c\u5f0f","title":"VXLAN"},{"location":"network/overlay/vxlan/#vxlan","text":"VXLAN\u662f\u4e00\u79cd\u627f\u8f7d\u534f\u8bae\uff0c\u5b9a\u4e49\u4e86MAC-over-UDP\u7684\u5c01\u88c5\u65b9\u6848\uff0c\u7531\u5185\uff08inner\uff09\u5230\u5916\uff08outer\uff09\u5206\u522b\u589e\u52a0\u4e868\u5b57\u8282VXLAN\u5934\u90e8\uff0c8\u5b57\u8282UDP\u5934\u90e8\uff0c20\u5b57\u8282IP\u5934\u90e8\u548c14\u5b57\u8282\u4ee5\u592a\u7f51\u5934\u90e8\uff0c\u5408\u8ba1\u589e\u52a0\u4e8650\u5b57\u8282\u5c01\u88c5\u3002","title":"VXLAN"},{"location":"network/overlay/vxlan/#intro","text":"\u542f\u8fea\u4e91\u8c08 | VXLAN\u7bc7 : \u57fa\u672c\u4ecb\u7ecd\u52a0header\u683c\u5f0f","title":"Intro"},{"location":"ovs/dive/","text":"OVS Internels OVS Deep Dive 4: OVS netdev and Patch Port (arthurchiao.art) [ \u8bd1] \u4e91\u539f\u751f\u4e16\u754c\u4e2d\u7684\u6570\u636e\u5305\u6807\u8bb0\uff08packet mark\uff09(LPC, 2020) (arthurchiao.art)","title":"DeepDive"},{"location":"ovs/dive/#ovs","text":"","title":"OVS"},{"location":"ovs/dive/#internels","text":"OVS Deep Dive 4: OVS netdev and Patch Port (arthurchiao.art) [ \u8bd1] \u4e91\u539f\u751f\u4e16\u754c\u4e2d\u7684\u6570\u636e\u5305\u6807\u8bb0\uff08packet mark\uff09(LPC, 2020) (arthurchiao.art)","title":"Internels"},{"location":"ovs/ref/","text":"Refs Fields OVS-FIELDS NXM The OpenFlow 1.2 format, called OXM (OpenFlow Extensible Match), was modeled closely on an extension to OpenFlow 1.0 introduced in Open vSwitch 1.1 called NXM (Nicira Extended Match) Links: https://cyent.github.io/ovs/appendix/nxm/","title":"Ref"},{"location":"ovs/ref/#refs","text":"","title":"Refs"},{"location":"ovs/ref/#fields","text":"OVS-FIELDS","title":"Fields"},{"location":"ovs/ref/#nxm","text":"The OpenFlow 1.2 format, called OXM (OpenFlow Extensible Match), was modeled closely on an extension to OpenFlow 1.0 introduced in Open vSwitch 1.1 called NXM (Nicira Extended Match) Links: https://cyent.github.io/ovs/appendix/nxm/","title":"NXM"}]}